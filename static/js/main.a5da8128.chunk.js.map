{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","s","type","payload","state","console","log","spiderman","duration","App","combineReducers","selectedSong","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC3B,OACE,yBAAKC,UAAW,OAAQC,IAAOF,EAAKG,OAClC,yBAAKF,UAAU,yBACb,4BAAQA,UAAU,oBAChBG,QAAS,kBAAK,EAAKP,MAAMQ,WAAWL,KADtC,WAOF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAMrC,OAAO,yBAAKF,UAAW,mBAAoBL,KAAKU,kB,GAnB7BC,aA8BRC,eANO,SAACC,GACnB,MAAO,CACLX,MAAOW,EAAEX,SAIyB,CACtCO,WChCuB,SAACL,GAExB,MAAO,CACLU,KAAM,gBACNC,QAASX,KD2BEQ,CAEZb,GETYa,eAPS,SAACI,GAEvB,OADAC,QAAQC,IAAI,OAAOF,GACZ,CACLZ,KAAMY,EAAMG,aAIDP,EAxBI,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACnB,OAAKA,EAIL,6BACE,4CACA,qCACUA,EAAKG,MACb,6BAFF,aAGaH,EAAKgB,WARX,mBCcIC,EAfH,WACV,OACI,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCQGiB,cAAgB,CAC7BpB,MAlBmB,WAEnB,OADAe,QAAQC,IAAI,iBACL,CACL,CAAEX,MAAO,YAAaa,SAAU,QAChC,CAAEb,MAAO,WAAYa,SAAU,QAC/B,CAAEb,MAAO,WAAYa,SAAU,QAC/B,CAAEb,MAAO,qBAAsBa,SAAU,UAa3CD,UAT0B,WAAkC,IAAjCI,EAAgC,uDAAjB,KAAMC,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAOV,KACFU,EAAOT,QAETQ,KCTTE,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.a5da8128.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {selectSong} from '../actions';\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map((song)=> {\n      return (\n        <div className={\"item\"} key = {song.title}>\n          <div className=\"right floated content\">\n            <button className=\"ui button primary\"\n              onClick={()=> this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    })\n  }\n  render() {\n    return <div className={\"ui divided list\"}>{this.renderList()}</div>\n  }\n}\n\n//state is all of the data inside our store\nconst mapStateToProps=(s) =>{\n    return {\n      songs: s.songs\n    };\n}\n\nexport default connect(mapStateToProps, {\n  selectSong: selectSong\n})(SongList);\n\n","//action creator\n\n//named export for multiple exports\nexport const selectSong= (song) => {\n  //return an action\n  return {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nconst SongDetail = ({song}) => {\n  if (!song) {\n    return 'Select a song'\n  }\n  return (\n  <div>\n    <h3>Details for:</h3>\n    <p>\n      Title: {song.title}\n      <br />\n      Duration: {song.duration}\n    </p>\n\n  </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log('HERE',state);\n  return {\n    song: state.spiderman\n  }\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from \"react\";\nimport SongList from './SongList';\nimport SongDetail from \"./SongDetail\";\n\nconst App = () => {\n  return (\n      <div className=\"ui container grid\">\n        <div className=\"ui row\">\n          <div className=\"column eight wide\">\n            <SongList/>\n          </div>\n          <div className=\"column eight wide\">\n            <SongDetail/>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import {combineReducers} from \"redux\";\n\n\nconst songsReducer = () => {\n  console.log('songs reducer');\n  return [\n    { title: 'No Scrubs', duration: '4:05'},\n    { title: 'Macarena', duration: '2:30'},\n    { title: 'All Star', duration: '3:15'},\n    { title: 'I Want it That Way', duration: '1:45'}\n  ]\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  spiderman: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n      <App/>\n    </Provider>,\n    document.querySelector('#root'));\n"],"sourceRoot":""}